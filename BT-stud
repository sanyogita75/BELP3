pragma solidity ^0.8.7;

contract Student_management {
    struct Student {
        int256 stud_id;
        string name;
        string department;
    }
    Student[] Students;
    mapping(address => uint256) balance;

    function add_stud(int256 stud_id,string memory name,string memory department) 
    public {
        Student memory stud = Student(stud_id, name, department);
        Students.push(stud);
    }

    function getStudent(int256 stud_id)public view returns (string memory, string memory)
    {
        for (uint256 i = 0; i < Students.length; i++) {
            Student memory stud = Students[i];
            if (stud.stud_id == stud_id) {
                return (stud.name, stud.department);
            }
        }
        return ("Not Found", "Not Found");
    }
    function checkbalace() public view returns(uint)
    {
      return address(this).balance;
    }

    fallback() external payable {
        balance[msg.sender] += msg.value;
        // emit log("fallback", msg.value, "");
    }
}
